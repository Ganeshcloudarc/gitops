<launch>

    <arg name="carla" default="true"/>

    <group if="$(eval arg('carla'))">
        <param name="robot_base_frame" value ="ego_vehicle"/>
        <include file="$(find collision_check)/launch/pointcloud_to_laserscan.launch">
            <arg name="cloud_in"         value="/carla/ego_vehicle/lidar" />
            <arg name="target_frame"            value="ego_vehicle" />
            <arg name="laser_out_topic" value="zed/laser_scan"/>
        </include>
    </group>
    <group unless="$(arg carla)">
        <param name="robot_base_frame" value ="base_link"/>
        <include file="$(find collision_check)/launch/pointcloud_to_laserscan.launch">
            <arg name="cloud_in"         value="/zed2i/zed_node/point_cloud/cloud_registered" />
            <arg name="target_frame"            value="base_link" />
            <arg name="laser_out_topic" value="zed/laser_scan"/>
        </include>
    </group>

    <rosparam command="load" file="$(find collision_check)/params/obstacle_stop_planner.yaml"/>
    <node pkg="collision_check" type="obstacle_stop_planner.py" name="obstacle_stop_planner_node" />

</launch>