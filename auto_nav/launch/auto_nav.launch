<launch>
    <!-- <arg name="cloud_in_for_auto_nav" default="/local_cloud_map"/> -->
    <arg name="cloud_in_for_auto_nav" default="/lslidar_point_cloud"/>
    <arg name="mission_continue" default="false"/>
    <arg name="enable_cloud_mapping" default="true"/>
    <param name="/mission_continue" value ="$(arg mission_continue)"/>


    <include file="$(find auto_nav)/launch/pointcloud_to_laserscan.launch" >
        <arg name="cloud_in" value="/obstacle_detector/cloud_clusters"/>
        <arg name="config_file" value="cloud_to_laser_180_params.yaml"/>
        <arg name="scan_out" value="laser_scan"/>
    </include>

    
    <node pkg = "auto_nav" type = "autonav_core_node" name = "autonav_core_node" output = 'screen'>
        <rosparam command="load" file="$(find auto_nav)/params/autonav_params_cpp.yaml"/>
        <rosparam file="$(find collision_check)/params/costmap_params.yaml" command="load" ns="costmap" />
    </node>
    
    <include file="$(find lidar_obstacle_detector)/launch/obstacle_detect.launch">
            <arg name="rviz" value="false"/>
            <arg name="points_in" value="$(arg cloud_in_for_auto_nav)"/>
            <!-- <arg name="rqt_reconfigure" value="true"/> -->
            <arg name="config_file" value="autonav_lidar_params.yaml"/>
            <!-- lidar_obstacle_detector/params/autonav_lidar_params.yaml -->
    </include>

    <!-- local cloud map node -->
    <include file="$(find auto_nav)/launch/pointcloud_map.launch">
            <arg name="input_cloud" value="/obstacle_detector/cloud_clusters"/>
    </include>

</launch>
